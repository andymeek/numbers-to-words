"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.numbersToWordsConverter = void 0;
const numbers = [
    { num: 1000, label: 'thousand' },
    { num: 100, label: 'hundred' },
    { num: 90, label: 'ninety' },
    { num: 80, label: 'eighty' },
    { num: 70, label: 'seventy' },
    { num: 60, label: 'sixty' },
    { num: 50, label: 'fifty' },
    { num: 40, label: 'forty' },
    { num: 30, label: 'thirty' },
    { num: 20, label: 'twenty' },
    { num: 19, label: 'nineteen' },
    { num: 18, label: 'eighteen' },
    { num: 17, label: 'seventeen' },
    { num: 16, label: 'sixteen' },
    { num: 15, label: 'fifteen' },
    { num: 14, label: 'fourteen' },
    { num: 13, label: 'thirteen' },
    { num: 12, label: 'twelve' },
    { num: 11, label: 'eleven' },
    { num: 10, label: 'ten' },
    { num: 9, label: 'nine' },
    { num: 8, label: 'eight' },
    { num: 7, label: 'seven' },
    { num: 6, label: 'six' },
    { num: 5, label: 'five' },
    { num: 4, label: 'four' },
    { num: 3, label: 'three' },
    { num: 2, label: 'two' },
    { num: 1, label: 'one' },
    { num: 0, label: 'zero' }
];
function numbersToWordsConverter(number) {
    const foundNumber = numbers.find(({ num }) => number >= num);
    if (!foundNumber) {
        return 'Error: number not found!';
    }
    const { label, num } = foundNumber;
    let words = '';
    if (number < 100) {
        words += label;
        number -= num;
        if (number > 0) {
            words += `-${numbersToWordsConverter(number)}`;
        }
    }
    else {
        const result = Math.floor(number / num);
        const remainder = number % num;
        if (remainder > 0 && remainder <= 100) {
            return `${numbersToWordsConverter(result)} ${label} and ${numbersToWordsConverter(remainder)}`;
        }
        else if (remainder > 100) {
            return `${numbersToWordsConverter(result)} ${label} ${numbersToWordsConverter(remainder)}`;
        }
        else {
            return `${numbersToWordsConverter(result)} ${label}`;
        }
    }
    return words;
}
exports.numbersToWordsConverter = numbersToWordsConverter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVycy10by13b3Jkcy1jb252ZXJ0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbnVtYmVycy10by13b3Jkcy1jb252ZXJ0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTSxPQUFPLEdBR1A7SUFDSixFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRTtJQUNoQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRTtJQUM5QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtJQUM1QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtJQUM1QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRTtJQUM3QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtJQUMzQixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtJQUMzQixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtJQUMzQixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtJQUM1QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtJQUM1QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRTtJQUM5QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRTtJQUM5QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRTtJQUMvQixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRTtJQUM3QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRTtJQUM3QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRTtJQUM5QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRTtJQUM5QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtJQUM1QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRTtJQUM1QixFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRTtJQUN6QixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtJQUN6QixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtJQUMxQixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtJQUMxQixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRTtJQUN4QixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtJQUN6QixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtJQUN6QixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtJQUMxQixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRTtJQUN4QixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRTtJQUN4QixFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRTtDQUMxQixDQUFBO0FBRUQsU0FBZ0IsdUJBQXVCLENBQUMsTUFBYztJQUNwRCxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFBO0lBRTVELElBQUksQ0FBQyxXQUFXLEVBQUU7UUFDaEIsT0FBTywwQkFBMEIsQ0FBQTtLQUNsQztJQUVELE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsV0FBVyxDQUFBO0lBQ2xDLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQTtJQUVkLElBQUksTUFBTSxHQUFHLEdBQUcsRUFBRTtRQUNoQixLQUFLLElBQUksS0FBSyxDQUFBO1FBQ2QsTUFBTSxJQUFJLEdBQUcsQ0FBQTtRQUViLElBQUksTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNkLEtBQUssSUFBSSxJQUFJLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUE7U0FDL0M7S0FDRjtTQUFNO1FBQ0wsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUE7UUFDdkMsTUFBTSxTQUFTLEdBQUcsTUFBTSxHQUFHLEdBQUcsQ0FBQTtRQUU5QixJQUFJLFNBQVMsR0FBRyxDQUFDLElBQUksU0FBUyxJQUFJLEdBQUcsRUFBRTtZQUNyQyxPQUFPLEdBQUcsdUJBQXVCLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxRQUFRLHVCQUF1QixDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUE7U0FDL0Y7YUFBTSxJQUFJLFNBQVMsR0FBRyxHQUFHLEVBQUU7WUFDMUIsT0FBTyxHQUFHLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssSUFBSSx1QkFBdUIsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFBO1NBQzNGO2FBQU07WUFDTCxPQUFPLEdBQUcsdUJBQXVCLENBQUMsTUFBTSxDQUFDLElBQUksS0FBSyxFQUFFLENBQUE7U0FDckQ7S0FDRjtJQUVELE9BQU8sS0FBSyxDQUFBO0FBQ2QsQ0FBQztBQS9CRCwwREErQkMifQ==