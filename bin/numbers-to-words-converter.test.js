"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const numbers_to_words_converter_1 = require("./numbers-to-words-converter");
test('0', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(0)).toBe('zero');
});
test('1', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(1)).toBe('one');
});
test('20', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(20)).toBe('twenty');
});
test('21', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(21)).toBe('twenty-one');
});
test('100', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(100)).toBe('one hundred');
});
test('101', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(101)).toBe('one hundred and one');
});
test('202', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(202)).toBe('two hundred and two');
});
test('52', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(52)).toBe('fifty-two');
});
test('352', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(352)).toBe('three hundred and fifty-two');
});
test('1000', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(1000)).toBe('one thousand');
});
test('3007', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(3007)).toBe('three thousand and seven');
});
test('5204', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(5204)).toBe('five thousand two hundred and four');
});
test('30020', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(30020)).toBe('thirty thousand and twenty');
});
test('100000', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(100000)).toBe('one hundred thousand');
});
test('100000', () => {
    expect(numbers_to_words_converter_1.numbersToWordsConverter(100000)).toBe('one hundred thousand');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVycy10by13b3Jkcy1jb252ZXJ0ZXIudGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9udW1iZXJzLXRvLXdvcmRzLWNvbnZlcnRlci50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkVBQXNFO0FBRXRFLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFO0lBQ2IsTUFBTSxDQUFDLG9EQUF1QixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBQ2pELENBQUMsQ0FBQyxDQUFBO0FBRUYsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUU7SUFDYixNQUFNLENBQUMsb0RBQXVCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7QUFDaEQsQ0FBQyxDQUFDLENBQUE7QUFFRixJQUFJLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRTtJQUNkLE1BQU0sQ0FBQyxvREFBdUIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQTtBQUNwRCxDQUFDLENBQUMsQ0FBQTtBQUVGLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO0lBQ2QsTUFBTSxDQUFDLG9EQUF1QixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFBO0FBQ3hELENBQUMsQ0FBQyxDQUFBO0FBRUYsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUU7SUFDZixNQUFNLENBQUMsb0RBQXVCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUE7QUFDMUQsQ0FBQyxDQUFDLENBQUE7QUFFRixJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtJQUNmLE1BQU0sQ0FBQyxvREFBdUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBO0FBQ2xFLENBQUMsQ0FBQyxDQUFBO0FBRUYsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUU7SUFDZixNQUFNLENBQUMsb0RBQXVCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQTtBQUNsRSxDQUFDLENBQUMsQ0FBQTtBQUVGLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO0lBQ2QsTUFBTSxDQUFDLG9EQUF1QixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBO0FBQ3ZELENBQUMsQ0FBQyxDQUFBO0FBRUYsSUFBSSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUU7SUFDZixNQUFNLENBQUMsb0RBQXVCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsNkJBQTZCLENBQUMsQ0FBQTtBQUMxRSxDQUFDLENBQUMsQ0FBQTtBQUVGLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO0lBQ2hCLE1BQU0sQ0FBQyxvREFBdUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQTtBQUM1RCxDQUFDLENBQUMsQ0FBQTtBQUVGLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO0lBQ2hCLE1BQU0sQ0FBQyxvREFBdUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxDQUFBO0FBQ3hFLENBQUMsQ0FBQyxDQUFBO0FBRUYsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUU7SUFDaEIsTUFBTSxDQUFDLG9EQUF1QixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxDQUFDLENBQUE7QUFDbEYsQ0FBQyxDQUFDLENBQUE7QUFFRixJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtJQUNqQixNQUFNLENBQUMsb0RBQXVCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQTtBQUMzRSxDQUFDLENBQUMsQ0FBQTtBQUVGLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFO0lBQ2xCLE1BQU0sQ0FBQyxvREFBdUIsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFBO0FBQ3RFLENBQUMsQ0FBQyxDQUFBO0FBRUYsSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUU7SUFDbEIsTUFBTSxDQUFDLG9EQUF1QixDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUE7QUFDdEUsQ0FBQyxDQUFDLENBQUEifQ==